---
// src/components/PlanosComponent.astro
const { categorias } = Astro.props;

// Estado inicial
let categoriaAtiva = "servicos";
---

<div class="py-16">
  <div class="container mx-auto">
    <!-- Botões de navegação -->
    <div class="flex justify-center gap-8 mb-12 flex-wrap">
      {Object.keys(categorias).map((key) => {
        const categoria = categorias[key];
        return (
          <button
            data-categoria={key}
            class={`px-8 py-3 rounded-xl font-medium transition-all duration-300 ${
              categoriaAtiva === key
                ? 'btn-primary'
                : 'btn-plans text-white'
            }`}
          >
            {categoria.titulo}
          </button>
        );
      })}
    </div>

    <!-- Tabelas de planos  -->
    <div class="flex flex-col items-center">
      <div class="w-full">
        {Object.keys(categorias).map((key) => {
          const categoria = categorias[key];
          return (
            <div data-planos={key} class={categoriaAtiva === key ? 'block' : 'hidden'}>
              <div class="grid grid-cols-1 md:grid-cols-3 gap-8 items-start">
                {categoria.planos.map((plano) => (
                  <div class="flex flex-col bg-[#122687] rounded-2xl shadow-xl overflow-hidden border-2 border-[#E3E8FF] min-w-[320px] w-full fluorescent-border">
                    <div class="p-8 text-white text-center border-b-0">
                      <h2 class="text-2xl md:text-3xl font-extrabold mb-1 text-transparent bg-clip-text bg-gradient-to-r from-orange-400 from-10% via-amber-300 via-40% to-orange-500 to-90% soft-neon-text">{plano.titulo}</h2>
                      <p class="text-white/90 text-lg">{plano.subtitulo}</p>
                      
                      <div class="mt-6 flex items-end justify-center">
                        <div class="mr-2">
                          <span class="text-sm line-through text-gray-400">{plano.precoOriginal}</span>
                          <p class="text-4xl font-bold text-white">{plano.precoPromocional}</p>
                        </div>
                        <span class="text-sm mb-1 text-gray-400">{plano.periodo}</span>
                      </div>
                      
                      <button class="btn-primary mt-6 w-full max-w-[240px] mx-auto">
                        Contrate agora
                      </button>
                    </div>

                    <div class="p-4 pl-4">
                      <ul class="space-y-4">
                        {plano.beneficios.map((beneficio) => (
                          <li class="flex items-start gap-2">
                            <span class="text-[#FF8C00] text-xl">✔</span>
                            <span class="text-white/90">{beneficio}</span>
                          </li>
                        ))}
                      </ul>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          );
        })}
      </div>
    </div>
  </div>
</div>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const buttons = document.querySelectorAll('[data-categoria]');
    
    buttons.forEach(button => {
      button.addEventListener('click', (e) => {
        const target = e.currentTarget;
        const categoria = target.getAttribute('data-categoria');
        
        // Esconde todas as seções
        document.querySelectorAll('[data-planos]').forEach(section => {
          section.classList.add('hidden');
        });
        
        // Mostra apenas a seção clicada
        const seçãoAtiva = document.querySelector(`[data-planos="${categoria}"]`);
        if (seçãoAtiva) {
          seçãoAtiva.classList.remove('hidden');
        }
        
        // Atualiza o estado ativo dos botões
        buttons.forEach(btn => {
          btn.classList.remove('btn-primary');
          btn.classList.add('btn-plans', 'text-white');
        });
        
        target.classList.remove('btn-plans', 'text-white');
        target.classList.add('btn-primary');
      });
    });
  });
</script>

<style is:global>
  .soft-neon-text {
    text-shadow: 0 0 4px rgba(255, 145, 0, 0.4), 
                 0 0 8px rgba(255, 94, 0, 0.3);
  }

  /* Efeito de borda fluorescente */
  .fluorescent-border {
    position: relative;
    border-width: 2px;
    border-color: #E3E8FF;
    box-shadow: 0 0 10px rgba(227, 232, 255, 0.5),
                0 0 20px rgba(227, 232, 255, 0.3),
                inset 0 0 10px rgba(227, 232, 255, 0.3);
  }

  /* Botão Primário (Laranja - igual ao "Abrir Empresa") */
  .btn-primary {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    color: white !important;
    font-size: 1rem;
    font-weight: 500;
    padding: 0.75rem 2rem;
    min-width: 180px;
    height: 48px;
    border-radius: 12px;
    background: linear-gradient(to right, #f59e0b 20%, #ea580c 80%);
    box-shadow: 0 0 8px rgba(255, 165, 0, 0.5),
                0 0 15px rgba(255, 100, 0, 0.3);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    border: none;
    outline: none;
    cursor: pointer;
    text-decoration: none !important;
  }

  .btn-primary:hover, 
  .btn-primary:focus {
    transform: scale(1.05);
    box-shadow: 0 0 12px rgba(255, 195, 0, 0.7),
                0 0 25px rgba(255, 120, 0, 0.5),
                0 0 35px rgba(255, 80, 0, 0.3);
    filter: brightness(1.1);
  }

  /* Efeito de brilho interno no hover */
  .btn-primary::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(
        circle, 
        rgba(255, 230, 0, 0.2) 0%, 
        transparent 70%
    );
    transform: scale(0);
    transition: transform 0.5s ease;
    opacity: 0;
  }

  .btn-primary:hover::before {
    transform: scale(1);
    opacity: 1;
  }

  /* Botão Planos (Azul - igual ao "Migrar para Tucont") */
  .btn-plans {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    color: white !important;
    font-size: 1rem;
    font-weight: 500;
    padding: 0.75rem 2rem;
    min-width: 180px;
    height: 48px;
    border-radius: 12px;
    background: linear-gradient(to right, #243dbd 20%, #122687 80%);
    box-shadow: 0 0 8px rgba(36, 61, 189, 0.5),
                0 0 15px rgba(18, 38, 135, 0.3);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    border: none;
    outline: none;
    cursor: pointer;
    text-decoration: none !important;
  }

  .btn-plans:hover, 
  .btn-plans:focus {
    transform: scale(1.05);
    box-shadow: 0 0 12px rgba(5, 20, 104, 0.7),
                0 0 25px rgba(29, 26, 218, 0.5),
                0 0 35px rgba(4, 7, 196, 0.3);
    filter: brightness(1.1);
    background: linear-gradient(to right, #1905ce 20%, #0a17cc 80%);
  }

  /* Efeito de brilho interno no hover */
  .btn-plans::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(
        circle, 
        rgba(255, 255, 255, 0.15) 0%, 
        transparent 70%
    );
    transform: scale(0);
    transition: transform 0.5s ease;
    opacity: 0;
  }

  .btn-plans:hover::before {
    transform: scale(1);
    opacity: 1;
  }

  .transition-all {
    transition-property: all;
  }

  .duration-300 {
    transition-duration: 300ms;
  }
</style>