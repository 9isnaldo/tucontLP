---
import { Image } from 'astro:assets';
import logoTucont from '../images/tucont.svg';

const menu = [
    {
        label: 'Soluções',
        link: '#',
        submenu: [
            { label: 'Abrir Empresa', link: 'https://rouvbymulgc.typeform.com/to/OSIekGSL?typeform-source=www.tucont.com.br', target: '_blank'},
            { label: 'Contabilidade, Tributos, Folha e Legalição', link: '/contabilidade' },
            { label: 'Plataforma para NFs e Financeiro', link: '/plataforma' },
            { label: 'BPO Financeiro', link: '/bpo' },
            { label: 'Jornada Empreendedora', link: '/jornada' }
        ]
    },
    {
        label: 'Para Contabilidades',
        link: '#agentes'
    },
    {
        label: 'Para Quem Somos',
        link: '#',
        submenu: [
            { label: 'Empreendedores Iniciantes', link: '/empreendedores-iniciantes' },
            { label: 'Para Startups', link: '/para-startups' },
            { label: 'Prestadores de Serviços', link: '/prestadores-serviços' },
            { label: 'Profissionais da Saúde', link: '/profissionais-saude' },
            { label: 'Para PMEs', link: '/pmes' },
            { label: 'Para MEIS', link: '/meis' },   
        ]
    },
    {
        label: 'Ecossistema',
        link: '#',
        submenu: [
            { label: 'Balcão do Empresário', link: 'https://www.balcaodoempresario.com.br/', target: '_blank' },
            { label: 'Poder Contábil', link: 'https://www.podercontabil.com.br/', target: '_blank' }
        ]
    },
    {
        label: 'Blog',
        link: 'https://blog.tucont.com.br',
        target: '_blank'
    }
];
---
<header class="sticky top-0 z-50 bg-[#E3E8FF] shadow-xl">
    <!-- Barra colorida no topo -->
    <div class="h-1.5 w-full bg-gradient-to-r from-[#FF7B00] via-[#FFD700] to-[#122687] animate-gradient-x"></div>
    
    <div class="container mx-auto px-4">
        <div class="flex justify-between items-center py-3">
            <!-- Logo com efeito -->
            <a href="/" class="flex items-center group">
                <Image src={logoTucont} alt="Logo da Tucont" width={160} height={40} class="group-hover:scale-105 transition-transform duration-300" />
            </a>

            <!-- Menu Desktop -->
            <nav class="hidden lg:flex items-center space-x-5">
                {menu.map((item, index) => (
                    <div class="relative group">
                        <a 
                            href={item.link} 
                            target={item.target || undefined}
                            rel={item.target ? 'noopener noreferrer' : undefined}
                            class="px-2 py-3 font-bold text-[#0D1439] hover:text-[#FF7B00] transition-all duration-300 flex items-center relative"
                        >
                            {item.label}
                            {item.submenu && (
                                <svg class="w-4 h-4 ml-1 transition-transform group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                                </svg>
                            )}
                            <span class="absolute bottom-2 left-1/2 transform -translate-x-1/2 h-0.5 w-0 bg-[#FF7B00] group-hover:w-3/4 transition-all duration-300"></span>
                        </a>

                        {item.submenu && (
                            <div class="absolute left-0 mt-0 w-64 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 ease-out z-50 transform translate-y-1">
                                <div class="bg-white rounded-lg shadow-2xl overflow-hidden border border-gray-100">
                                    <div class="p-2 space-y-1">
                                        {item.submenu.map((subitem) => (
                                            <a 
                                                href={subitem.link} 
                                                class="block px-4 py-3 text-sm font-medium text-[#0D1439] hover:bg-[#FF7B00]/10 hover:text-[#FF7B00] rounded-lg transition-all duration-200 group/item relative"
                                                target={subitem.target || undefined}
                                                rel={subitem.target ? 'noopener noreferrer' : undefined}
                                            >
                                                <div class="flex items-center">
                                                    <span class="group-hover/item:translate-x-2 transition-transform duration-200">
                                                        {subitem.label}
                                                    </span>
                                                    <svg class="ml-auto w-4 h-4 opacity-0 group-hover/item:opacity-100 transition-opacity duration-300 text-[#FF7B00]" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                                                    </svg>
                                                </div>
                                                <span class="absolute left-0 top-1/2 transform -translate-y-1/2 h-3/5 w-0.5 bg-[#FF7B00] opacity-0 group-hover/item:opacity-100 transition-opacity duration-200 rounded-full"></span>
                                            </a>
                                        ))}
                                    </div>
                                </div>
                            </div>
                        )}
                    </div>
                ))}

                <div class="flex items-center ml-4 space-x-4">
                    <a 
                        href="/planos" 
                        class="px-6 py-3 rounded-lg font-bold text-white bg-gradient-to-r from-[#122687] to-[#0D1439] hover:from-[#0D1439] hover:to-[#122687] transition-all duration-500 shadow-lg hover:shadow-xl hover:scale-[1.02] flex items-center relative overflow-hidden min-w-[180px] h-12 justify-center"
                    >
                        <span class="relative z-10 flex items-center">
                            Planos
                        </span>
                        <span class="absolute inset-0 bg-gradient-to-r from-[#0D1439] to-[#122687] opacity-0 hover:opacity-100 transition-opacity duration-300"></span>
                    </a>
                    <a 
                        href="https://app.tucont.com.br/auth/login" 
                        class="px-6 py-3 rounded-lg font-bold text-white bg-gradient-to-r from-[#FF7B00] to-[#FF4D00] hover:from-[#FF4D00] hover:to-[#FF7B00] transition-all duration-500 shadow-lg hover:shadow-xl hover:scale-[1.02] flex items-center relative overflow-hidden min-w-[180px] h-12 justify-center"
                        target="_blank"
                        rel="noopener noreferrer"
                    >
                        <span class="relative z-10 flex items-center">
                            Acessar
                        </span>
                        <span class="absolute inset-0 bg-gradient-to-r from-[#FF4D00] to-[#FF7B00] opacity-0 hover:opacity-100 transition-opacity duration-300"></span>
                    </a>
                </div>
            </nav>

            <!-- Mobile Menu Button -->
            <button class="lg:hidden p-2 rounded-lg text-[#0D1439] hover:bg-[#FF7B00]/10 focus:outline-none transition-colors duration-300" id="mobileMenuButton">
                <svg class="w-7 h-7" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                </svg>
            </button>
        </div>

        <!-- Mobile Menu -->
        <div class="lg:hidden hidden bg-white rounded-xl shadow-2xl mt-2 p-4 border border-gray-100" id="mobileMenu">
            <div class="space-y-2">
                {menu.map((item) => {
                    const randomId = Math.random().toString(36).substring(2, 9);
                    return (
                        <div class="relative">
                            <a 
                                href={item.submenu ? '#' : item.link} 
                                class={`flex items-center justify-between px-4 py-3 rounded-lg font-bold text-[#0D1439] ${item.submenu ? 'hover:bg-[#FF7B00]/10' : 'hover:bg-gray-50'} transition-colors duration-200`}
                                target={item.target || undefined}
                                rel={item.target ? 'noopener noreferrer' : undefined}
                                data-submenu={item.submenu ? randomId : undefined}
                            >
                                <span class="flex items-center">
                                    {item.label}
                                </span>
                                {item.submenu && (
                                    <svg class="w-4 h-4 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                                    </svg>
                                )}
                            </a>

                            {item.submenu && (
                                <div id={randomId} class="hidden pl-6 mt-1 space-y-1 border-l-2 border-[#FF7B00]">
                                    {item.submenu.map((subitem) => (
                                        <a 
                                            href={subitem.link} 
                                            class="block px-4 py-2.5 text-sm font-medium text-[#0D1439] hover:bg-[#FF7B00]/10 hover:text-[#FF7B00] rounded-lg transition-colors duration-200 flex items-center"
                                            target={subitem.target || undefined}
                                            rel={subitem.target ? 'noopener noreferrer' : undefined}
                                        >
                                            <span class="w-1.5 h-1.5 bg-[#FF7B00] rounded-full mr-2"></span>
                                            {subitem.label}
                                        </a>
                                    ))}
                                </div>
                            )}
                        </div>
                    );
                })}
            </div>

            <div class="mt-4 pt-4 border-t border-gray-200 space-y-3">
                <a 
                    href="/planos" 
                    class="block text-center px-6 py-3 rounded-lg font-bold text-white bg-gradient-to-r from-[#122687] to-[#0D1439] hover:from-[#0D1439] hover:to-[#122687] transition-all duration-500 shadow-lg hover:shadow-xl flex items-center justify-center relative overflow-hidden min-w-[180px] h-12"
                >
                    <span class="relative z-10 flex items-center">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                        </svg>
                        Planos
                    </span>
                    <span class="absolute inset-0 bg-gradient-to-r from-[#0D1439] to-[#122687] opacity-0 hover:opacity-100 transition-opacity duration-300"></span>
                </a>
                <a 
                    href="https://app.tucont.com.br/auth/login" 
                    class="block text-center px-6 py-3 rounded-lg font-bold text-white bg-gradient-to-r from-[#FF7B00] to-[#FF4D00] hover:from-[#FF4D00] hover:to-[#FF7B00] transition-all duration-500 shadow-lg hover:shadow-xl flex items-center justify-center relative overflow-hidden min-w-[180px] h-12"
                    target="_blank"
                    rel="noopener noreferrer"
                >
                    <span class="relative z-10 flex items-center">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1"></path>
                        </svg>
                        Acessar
                    </span>
                    <span class="absolute inset-0 bg-gradient-to-r from-[#FF4D00] to-[#FF7B00] opacity-0 hover:opacity-100 transition-opacity duration-300"></span>
                </a>
            </div>
        </div>
    </div>
</header>

<script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
        const mobileMenuButton = document.getElementById('mobileMenuButton');
        const mobileMenu = document.getElementById('mobileMenu');

        // Toggle mobile menu
        if (mobileMenuButton && mobileMenu) {
            mobileMenuButton.addEventListener('click', () => {
                mobileMenu.classList.toggle('hidden');
                
                // Toggle icon between menu and close
                const icon = mobileMenuButton.querySelector('svg');
                if (icon) {
                    if (mobileMenu.classList.contains('hidden')) {
                        icon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>';
                    } else {
                        icon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>';
                    }
                }
            });
        }

        // Toggle submenus in mobile
        document.querySelectorAll('[data-submenu]').forEach(link => {
            link.addEventListener('click', function(e) {
                if (this.dataset.submenu) {
                    e.preventDefault();
                    const submenu = document.getElementById(this.dataset.submenu);
                    if (submenu) {
                        submenu.classList.toggle('hidden');
                        const icon = this.querySelector('svg');
                        if (icon) {
                            icon.classList.toggle('rotate-180');
                        }
                    }
                }
            });
        });
    });
</script>

<style>
    /* Animação do gradiente na barra superior */
    @keyframes gradient-x {
        0% {
            background-position: 0% 50%;
        }
        50% {
            background-position: 100% 50%;
        }
        100% {
            background-position: 0% 50%;
        }
    }

    .animate-gradient-x {
        background-size: 200% 200%;
        animation: gradient-x 8s ease infinite;
    }

    /* Efeitos especiais nos botões */
    .btn-primary {
        position: relative;
        overflow: hidden;
        z-index: 1;
    }

    .btn-primary::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(45deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.3) 50%, rgba(255,255,255,0.1) 100%);
        transform: translateX(-100%);
        transition: transform 0.6s ease;
        z-index: -1;
    }

    .btn-primary:hover::before {
        transform: translateX(100%);
    }

    /* Efeito de brilho interno */
    .btn-glow {
        box-shadow: 0 0 15px rgba(255, 123, 0, 0.5);
    }

    .btn-glow:hover {
        box-shadow: 0 0 20px rgba(255, 123, 0, 0.7), 
                    0 0 30px rgba(255, 123, 0, 0.4);
    }

    /* Transições suaves */
    .transition-all {
        transition-property: all;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 300ms;
    }

    /* Efeito de gradiente animado nos botões */
    .bg-gradient-to-r {
        background-size: 200% auto;
    }

    .hover\:from-\[\#0D1439\]:hover, .hover\:to-\[\#122687\]:hover,
    .hover\:from-\[\#FF4D00\]:hover, .hover\:to-\[\#FF7B00\]:hover {
        background-position: right center;
    }

    /* Sombra mais pronunciada */
    .shadow-xl {
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    }

    /* Efeito de escala nos botões */
    .hover\:scale-\[1\.02\]:hover {
        transform: scale(1.02);
    }

    /* Efeito de sublinhado animado */
    .group:hover .group-hover\:w-3\/4 {
        width: 75%;
    }
</style>